start = statement+
statement = ws (function / type / expression) ws

function = identifier '(' parameters? ')' ws '{' statement* '}'
parameters = parameter (',' parameters)*
parameter = identifier

identifier = ws ([a-zA-Z_$][a-zA-Z_0-9$]*) ws

type = class
class = 'class' identifier '{' statement* '}'

arguments = expression (',' arguments)*

expression = ws (application / assingment / operation / terminal / parenthesis / lambda) ws
application = terminal '(' arguments? ')'
assingment = terminal '=' expression
operation = terminal operation expression
parenthesis = '(' expression ')'
terminal = literal / identifier
lambda = '(' parameters* ')' ws '{' statement* '}'
operation = [.\-+*%/]+

ws = [ \n\t]*
literal = ws (number / string) ws
number = [0-9]+ ('.' [0-9]+)?
string = '"' [^"]* '"'
